{"version":3,"sources":["App/App.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.module.css","redux/contacts/operations.js","redux/contacts/selector.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","redux/contacts/actions.js","Components/Filter/Filter.js","App/App.js","redux/contacts/reducer.js","redux/store.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContacts","contact","post","deleteContacts","contactId","delete","id","operations","getContacts","state","contacts","items","getFilter","filter","allFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","inputChange","evt","target","value","resetForm","className","s","formWrapper","form","onSubmit","preventDefault","find","alert","label","input","type","placeholder","pattern","onChange","button","ContactList","useEffect","listWrapper","list","map","item","text","onClick","filterChange","createAction","Filter","e","App","title","createReducer","fulfilled","payload","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49d632dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2qWrp\",\"title\":\"App_title__-f7u2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__trUPt\",\"input\":\"Filter_input__2nZ9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"ContactForm_formWrapper__1pkGp\",\"form\":\"ContactForm_form__2slBL\",\"label\":\"ContactForm_label__3aY5l\",\"input\":\"ContactForm_input__2Y6m9\",\"button\":\"ContactForm_button__12NZn\"};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://61fbcfbb3f1e34001792c612.mockapi.io\";\n\nconst fetchContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.get(\"/contacts\");\n      return data;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  }\n);\n\nconst addContacts = createAsyncThunk(\n  \"contacts/addContact\",\n  async (contact, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/contacts\", contact);\n      return data;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  }\n);\n\nconst deleteContacts = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (contactId, { rejectWithValue }) => {\n    try {\n      const {\n        data: { id },\n      } = await axios.delete(`/contacts/${contactId}`);\n      return id;\n    } catch (error) {\n      rejectWithValue(error);\n    }\n  }\n);\n\nconst operations = { addContacts, deleteContacts, fetchContacts };\n\nexport default operations;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const allFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import s from \"./ContactForm.module.css\";\nimport { useState } from \"react\";\nimport operations from \"../../redux/contacts/operations\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/selector\";\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const inputChange = (evt) => {\n    switch (evt.target.name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n\n      case \"number\":\n        setNumber(evt.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(\"This contact has already been added to the list\");\n    }\n    dispatch(operations.addContacts({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <div className={s.formWrapper}>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            onChange={inputChange}\n          />\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            placeholder=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            onChange={inputChange}\n          />\n        </label>\n        <button className={s.button}>Add contact</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ContactForm;\n","import s from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { allFilteredContacts } from \"../../redux/contacts/selector\";\nimport operations from \"../../redux/contacts/operations\";\nimport { useEffect } from \"react\";\n\nconst ContactList = () => {\n  const getContacts = useSelector(allFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={s.listWrapper}>\n      <ul className={s.list}>\n        {getContacts.map(({ name, number, id }) => {\n          return (\n            <li className={s.item} key={id}>\n              <p className={s.text}>{name}:</p>\n              <p className={s.text}>{number}</p>\n              <button\n                className={s.button}\n                type=\"button\"\n                onClick={() => dispatch(operations.deleteContacts(id))}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  getContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n};\n\nexport default ContactList;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst filterChange = createAction(\"contacts/filter\");\n\nexport default filterChange;\n","import s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport filterChange from \"../../redux/contacts/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/contacts/selector\";\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        onChange={(e) => dispatch(filterChange(e.target.value))}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import s from \"./App.module.css\";\nimport ContactForm from \"../Components/ContactForm/ContactForm\";\nimport ContactList from \"../Components/ContactList/ContactList\";\nimport Filter from \"../Components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <div className={s.App}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport filterChange from \"./actions\";\nimport operations from \"./operations\";\n\nconst { addContacts, deleteContacts, fetchContacts } = operations;\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContacts.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterChange]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/reducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport { store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2m4Ab\",\"text\":\"ContactList_text__rJGzV\",\"button\":\"ContactList_button__1jp4Y\"};"],"sourceRoot":""}